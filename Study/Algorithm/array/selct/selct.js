// 선택 정렬 = 가장 작은 것을 선택해서 제일 앞으로 보내는 방식

// 버블 정렬 시간 복잡도 O(N^2)

// 선택 정렬를 위한 변수는 5개가 필요하다. 5개는 i, j, mind, index, temp 변수로 이름을 정함

const sel = () => {
  let i; // 배열의 원소를 반복적으로 탐색하기 위한 용도 1
  let j; // 배열의 원소를 반복적으로 탐색하기 위한 용도 2
  let min; // 최소값을 정렬하기 위해 필요한 값으로 반복적으로 사용한다.
  let index; // 가장 작은 원소가 존재하는 위치로 사용할 용도
  let temp; // 특정한 두 숫자를 서로 바꾸기 위해 만든 임시적인 변수

  let tempArr = [1, 10, 5, 3, 8, 9, 4, 2, 6]; // 가장 작은 숫자를 앞으로 정렬 하기 위한 목적물

  for (i = 0; i < 10; i++) {
    min = 9999; // 최소값에 9999를 넣은 이유는 만약 목적물(tempArr)에 9999보다 큰 숫자가 있으면 안된다.
    // 지금 min에 9999 값의 의미는 목적물 배열안에 있는 숫자들은 9999보다 작다는 의미다.
    // 왜냐면 항상 최소값을 선택 해야하기 때문이다.
    for (let j = i; j < 10; j++) {
      if (min > tempArr[j]) {
        // 현재 탐색하고 있는 9999값을 가진 min이 목적물을 탐색하고 있는 tempArr[j] 보다 크다면 if문 안에 있는 내용이 실행

        min = tempArr[j]; // 최소 값을 현재 탐색하고 있는 원소에 집어 넣는 역할
        index = j; // 이것은 해당 index 값에 위치를 넣는다.
      }
    }
    // 해당 탐색이 한번 끝났을 때 가장 작은 값 또한 선택이 되었다면 가장 작은 값을 맨 앞으로 보내줘야 한다.
    // ----------------------------
    temp = tempArr[i]; // temp라는 변수에 일시적으로 tempArr[i] 값을 초기화 한다.
    tempArr[i] = tempArr[index]; // 그리고 가장 앞에 있는 원소의 값으로 최소값을 넣어준 이후
    tempArr[index] = temp; // 다시 tempArr[index] 주소 값으로 넣어준다.
    // ---------------------------- 위의 과정이 스와핑이라고 하는 과정으로 실제 index의 위치를 바꿔준다.

    // 이렇게 했을 때 현재 상태는 가장 작은 것 하나를 선택해서 제일 앞으로 보내고 정렬이 완료가 된 이후이다.
  }
  for (i = 0; i < 10; i++) {
    console.log("선택 정렬 완료:", tempArr[i]);
  } // 정렬이 완료된 후 결과를 확인하기 위해 console.log로 확인
  return 0;
};

// 선택정렬의 시간 복잡도는 O(N^2)다. 왜냐면 for문을 중첩해서 사용 했기 때문

for (let j = 0; j < 0; j++) {
  for (let i = 0; i < 0; i++) {
    if ((i = j)) {
      j = i;
    }
  }
}

// 위와 같은 형태의 시간 복잡도 O(N^2)다.

// 하나의 배열에 10개의 원소가 담겨져 있다고 가정을 하면 [1,2,3,4,5,6,7,8,9,10]

// 10 + 9 + 8 + .. + 1 는 등차수열로  10 * (10 + 1) / 2 = 55 즉 55를 연산을 한다.

// 만약 10,000개의 데이터가 있다면 10,000 * 10,000으로 100,000,000 1억번 정도 연산을 해야 한다.

// 10 * (10 + 1) / 2을 수식으로 표현 하면 N * (N + 1) / 2

// N * (N + 1) / 2 = N * N 과 같음

// O(N * N)으로 축약해서 사용하고 이걸 비고표기법이라고 함

const Psel = () => {
  let i;
  let j;
  let min;
  let index;
  let temp;

  let tempArr = [1, 10, 5, 3, 8, 9, 4, 2, 6];

  for (i = 0; i < 10; i++) {
    min = 9999;
    for (let j = i; j < 10; j++) {
      if (min > tempArr[j]) {
        min = tempArr[j];
        index = j;
      }
    }
    temp = tempArr[i];
    tempArr[i] = tempArr[index];
    tempArr[index] = temp;
  }
  for (i = 0; i < 10; i++) {
    console.log("선택정렬 완료:", tempArr[i]);
  }
  return 0;
};
