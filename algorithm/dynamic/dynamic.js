// 다이나믹 프로그래밍 (Dynamic Programming)

// 다이나믹 프로그래밍이란 하나의 문제를 단 한 번만 풀 수 있도록 하는 알고리즘이다. 1회용이라고 생각하면 된다.
// 한 번 푼 것을 여러 번 다시 푸는 비효율적인 알고리즘을 개선시키는 방법이기도 하다.
// 일반적으로 상당수 분할 정복 기법은 동일한 문제를 다시 푼다는 단점을 가지고 있다.
// 다만 분할 정복 기법은 '정렬'과 같은 몇몇 요소에 대해 동일한 문제를 다시 풀게 되는 단점은 없다.
// 예시로 퀵 정렬이나 병합 정렬은 매우 빠르다. 하지만 단순 분할 정복으로 풀게 되면 심각한 비효율성을 낳는 대표적인 예시인 알고리즘으로 피보나치 수열이 있다.
// 피보나치 수열은 특정한 숫자를 구하기 위해 그 앞에 있는 숫자와 두 칸 앞에 있는 숫자의 합을 구해야 하는 방식이다.

// 피보나치 수열의 점화식:  D[i] = D[i-1] + D[i-2]

// 위 공식에 따라 1, 1, 2, 3, 5, 8, 13, 21, 34, 55와 같은 규칙성이 생긴다.

// 만약 단순하게 분할 정복 기법을 이용해 15번째 피보나치 수열을 구한다고 가정을 하면
// D[15]를 구하려면 D[14]와 D[13]을 알아야 한다.
// D[15] = D[14] + D[13] <==> D[15] = D[15-1] + D[15-2]
// 또 D[14]를 구하려만 위와 마찬가지로 D[13]과 D[12]를 알아야 한다.
